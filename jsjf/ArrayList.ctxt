#BlueJ class context
comment0.target=ArrayList
comment0.text=\r\n\ ArrayList\ represents\ an\ array\ implementation\ of\ a\ list.\ The\ front\ of\r\n\ the\ list\ is\ kept\ at\ array\ index\ 0.\ This\ class\ will\ be\ extended\r\n\ to\ create\ a\ specific\ kind\ of\ list.\r\n\r\n\ @author\ Java\ Foundations\r\n\ @version\ 4.0\r\n
comment1.params=
comment1.target=ArrayList()
comment1.text=\r\n\ Creates\ an\ empty\ list\ using\ the\ default\ capacity.\r\n
comment10.params=target
comment10.target=int\ find(java.lang.Object)
comment10.text=\r\n\ Returns\ the\ array\ index\ of\ the\ specified\ element,\ or\ the\r\n\ constant\ NOT_FOUND\ if\ it\ is\ not\ found.\r\n\r\n\ @param\ target\ the\ target\ element\r\n\ @return\ the\ index\ of\ the\ target\ element,\ or\ the\ \r\n\ \ \ \ \ \ \ \ \ NOT_FOUND\ constant\r\n
comment11.params=
comment11.target=boolean\ isEmpty()
comment11.text=\r\n\ Returns\ true\ if\ this\ list\ is\ empty\ and\ false\ otherwise.\ \r\n\r\n\ @return\ true\ if\ the\ list\ is\ empty,\ false\ otherwise\r\n
comment12.params=
comment12.target=int\ size()
comment12.text=\r\n\ Returns\ the\ number\ of\ elements\ currently\ in\ this\ list.\r\n\r\n\ @return\ the\ number\ of\ elements\ in\ the\ list\r\n
comment13.params=
comment13.target=java.lang.String\ toString()
comment13.text=\r\n\ Returns\ a\ string\ representation\ of\ this\ list.\ \r\n\ \r\n\ @return\ the\ string\ representation\ of\ the\ list\r\n
comment14.params=
comment14.target=java.util.Iterator\ iterator()
comment14.text=\r\n\ Returns\ an\ iterator\ for\ the\ elements\ currently\ in\ this\ list.\r\n\ \r\n\ @return\ an\ iterator\ for\ the\ elements\ in\ the\ list\r\n
comment2.params=initialCapacity
comment2.target=ArrayList(int)
comment2.text=\r\n\ Creates\ an\ empty\ list\ using\ the\ specified\ capacity.\r\n\r\n\ @param\ initialCapacity\ the\ integer\ value\ of\ the\ size\ of\ the\ array\ list\r\n
comment3.params=
comment3.target=void\ expandCapacity()
comment3.text=\r\n\ Creates\ a\ new\ array\ to\ store\ the\ contents\ of\ this\ list\ with\r\n\ twice\ the\ capacity\ of\ the\ old\ one.\ Called\ by\ descendant\ classes\r\n\ that\ add\ elements\ to\ the\ list.\r\n
comment4.params=
comment4.target=java.lang.Object\ removeLast()
comment4.text=\r\n\ Removes\ and\ returns\ the\ last\ element\ in\ this\ list.\r\n\r\n\ @return\ the\ last\ element\ in\ the\ list\r\n\ @throws\ EmptyCollectionException\ if\ the\ element\ is\ not\ in\ the\ list\r\n
comment5.params=
comment5.target=java.lang.Object\ removeFirst()
comment5.text=\r\n\ Removes\ and\ returns\ the\ first\ element\ in\ this\ list.\r\n\r\n\ @return\ the\ first\ element\ in\ the\ list\r\n\ @throws\ EmptyCollectionException\ if\ the\ element\ is\ not\ in\ the\ list\r\n
comment6.params=element
comment6.target=java.lang.Object\ remove(java.lang.Object)
comment6.text=\r\n\ Removes\ and\ returns\ the\ specified\ element.\r\n\r\n\ @param\ \ element\ the\ element\ to\ be\ removed\ and\ returned\ from\ the\ list\r\n\ @return\ the\ removed\ elememt\r\n\ @throws\ ElementNotFoundException\ if\ the\ element\ is\ not\ in\ the\ list\r\n
comment7.params=
comment7.target=java.lang.Object\ first()
comment7.text=\r\n\ Returns\ a\ reference\ to\ the\ element\ at\ the\ front\ of\ this\ list.\r\n\ The\ element\ is\ not\ removed\ from\ the\ list.\ \ Throws\ an\r\n\ EmptyCollectionException\ if\ the\ list\ is\ empty.\ \ \r\n\r\n\ @return\ a\ reference\ to\ the\ first\ element\ in\ the\ list\r\n\ @throws\ EmptyCollectionException\ if\ the\ list\ is\ empty\r\n
comment8.params=
comment8.target=java.lang.Object\ last()
comment8.text=\r\n\ Returns\ a\ reference\ to\ the\ element\ at\ the\ rear\ of\ this\ list.\r\n\ The\ element\ is\ not\ removed\ from\ the\ list.\ Throws\ an\r\n\ EmptyCollectionException\ if\ the\ list\ is\ empty.\ \ \r\n\r\n\ @return\ a\ reference\ to\ the\ last\ element\ of\ this\ list\r\n\ @throws\ EmptyCollectionException\ if\ the\ list\ is\ empty\r\n
comment9.params=target
comment9.target=boolean\ contains(java.lang.Object)
comment9.text=\r\n\ Returns\ true\ if\ this\ list\ contains\ the\ specified\ element.\r\n\r\n\ @param\ target\ the\ target\ element\r\n\ @return\ true\ if\ the\ target\ is\ in\ the\ list,\ false\ otherwise\ \r\n
numComments=15
